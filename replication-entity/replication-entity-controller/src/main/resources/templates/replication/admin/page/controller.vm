## ---------------------------------------------------------------------------
## See the NOTICE file distributed with this work for additional
## information regarding copyright ownership.
##
## This is free software; you can redistribute it and/or modify it
## under the terms of the GNU Lesser General Public License as
## published by the Free Software Foundation; either version 2.1 of
## the License, or (at your option) any later version.
##
## This software is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
## Lesser General Public License for more details.
##
## You should have received a copy of the GNU Lesser General Public
## License along with this software; if not, write to the Free
## Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
## 02110-1301 USA, or see the FSF site: http://www.fsf.org.
## ---------------------------------------------------------------------------
#if ($request.replication_save)
  #macro(save $namePrefix $reference)
    #set ($replicationType = $request.get("${namePrefix}_replication_instance_type"))
    #if ($replicationType == 'default')
      #set ($configuration = $NULL)
    #elseif ($replicationType == 'all')
      ## TODO: add support for the direction in the UI
      #set ($configuration = [{
              "level" : $request.get("${namePrefix}_replication_instance_level"),
              "direction" : 'BOTH'
            }])
    #elseif ($replicationType == 'single')
      #set ($configuration = [])
      #set ($parameterPrefix = "${namePrefix}_replication_instance_uri_")  
      #foreach($parameterName in $request.parameterNames)
        #if ($parameterName.startsWith($parameterPrefix))
          #set ($instanceURI = $request.getParameter($parameterName))
          #set ($instanceIndex = $parameterName.substring($parameterPrefix.length()))
          #set ($instanceLevel = $request.getParameter("${namePrefix}_replication_instance_level_$instanceIndex"))
          #if ($!instanceLevel != '')
            ## TODO: add support for the direction in the UI
            #set ($void = $configuration.add({
              "instance" : $instanceURI,
              "level" : $instanceLevel,
              "direction" : 'BOTH'
            }))
          #end
        #end
      #end
    #end
    #set ($void = $services.replication.controller.save($reference, $configuration))
  #end

  #save('document', $replicationDocument.documentReference)
  #if ($replicationDocument.documentReference.name == 'WebHome')
    #save('space', $replicationDocument.documentReference.parent)
  #end
  #info($escapetool.xml($services.localization.render('replication.admin.page.save.success')))

  ## Update the list of resolved instances
  #set ($resolvedInstances = $services.replication.document.getDocumentInstances($replicationDocument.documentReference))
#end

#macro(displayReplicationConfiguration $reference)
  #set ($replicationConfigurations = $services.replication.document.getDocumentInstances($reference))
  #if ($replicationConfigurations.size() > 0)
    <dl>
      #foreach($replicationConfiguration in $replicationConfigurations)
        <dt>$replicationConfiguration.instance.name (<a href="$replicationConfiguration.instance.uRI">$replicationConfiguration.instance.uRI</a>)</dt>
        <dd>
          #if ($replicationConfiguration.level)
            $escapetool.xml($services.localization.render("replication.entity.level.${replicationConfiguration.level}.description"))
          #else
            $escapetool.xml($services.localization.render('replication.admin.page.notreplicated'))
          #end
        </dd>
      #end
    </dl>
  #else
    $escapetool.xml($services.localization.render("replication.admin.page.notreplicated"))
    <br/>
  #end
#end

#macro(selectLevel $currentLevel, $inputId)
  <select id="$inputId" name="$inputId">
    <option value="">$escapetool.xml($services.localization.render('replication.admin.page.notreplicated'))</option>
    <optgroup label="$escapetool.xml($services.localization.render('replication.admin.page.replicated'))">
      <option value="ALL"
        #if($currentLevel == 'ALL')selected#end
        title="$escapetool.xml($services.localization.render('replication.entity.level.ALL.description'))">
        $escapetool.xml($services.localization.render('replication.entity.level.ALL'))
      </option>
      <option value="REFERENCE"
        #if($currentLevel == 'REFERENCE')selected#end
        title="$escapetool.xml($services.localization.render('replication.entity.level.REFERENCE.description'))">
        $escapetool.xml($services.localization.render('replication.entity.level.REFERENCE'))
      </option>
     </optgroup>
  </select>
#end

#macro(replicationInstances $namePrefix, $instances, $reference)
  #if (!$replicationDisabled && $services.security.authorization.hasAccess('ADMIN', $reference))
    #set ($replicatedInstances = $services.replication.controller.getHibernateEntityReplication($reference))
    #set ($replicationInstanceMap = {})
    #set ($currentInstance = $services.replication.currentInstance)
    #set ($currentInstanceControl = $NULL)
    #foreach($replicatedInstance in $replicatedInstances)
      #if ($replicatedInstance.instance.uRI == $currentInstance.uRI)
        #set ($currentInstanceControl = $replicatedInstance)
      #else
        #set ($void = $replicationInstanceMap.put($replicatedInstance.instance.uRI, $replicatedInstance))
      #end
    #end
    #if(!$replicatedInstances)
      #set ($replicationType = 'default')
    #elseif($replicationInstanceMap.isEmpty() || ($replicationInstanceMap.size() == 1 && $replicationInstanceMap[$NULL] && !$replicationInstanceMap[$NULL].instance))
      #set ($replicationType = 'all')
    #else
      #set ($replicationType = 'single')
    #end
    #set ($replicationDisabled = $currentInstanceControl.level.name() == 'REFERENCE')

    #set ($inputId = "${namePrefix}_replication_instance_type_default")
    <input type="radio" id="$inputId" name="${namePrefix}_replication_instance_type" value="default" #if($replicationType == 'default')checked#end>
    <label for="$inputId">$escapetool.xml($services.localization.render('replication.admin.page.type.default'))</label>

    #displayReplicationConfiguration($reference.parent)

    #set ($inputId = "${namePrefix}_replication_instance_type_all")
    <input type="radio" id="$inputId" name="${namePrefix}_replication_instance_type" value="all" #if($replicationType == 'all')checked#end>
    <label for="$inputId">$escapetool.xml($services.localization.render('replication.admin.page.type.all'))</label>

    #set ($inputId = "${namePrefix}_replication_instance_level")
    #selectLevel($replicationInstanceMap.get($instance.uRI).level.name(), $inputId)

    <br/>
    #set ($inputId = "${namePrefix}_replication_instance_type_single")
    <input type="radio" id="$inputId" name="${namePrefix}_replication_instance_type" value="single" #if($replicationType == 'single')checked#end>
    <label for="$inputId">$escapetool.xml($services.localization.render('replication.admin.page.type.single'))</label>

    <dl>
      #foreach($instance in $instances)
        #set ($inputId = "${namePrefix}_replication_instance_level_$foreach.index")
        <dt><label for="$inputId">$instance.name (<a href="$instance.uRI">$instance.uRI</a>)</label></dt>
        <dd>
          <input type="hidden" name="${namePrefix}_replication_instance_uri_$foreach.index" value="$escapetool.xml($instance.uRI)"/>
          #selectLevel($replicationInstanceMap.get($instance.uRI).level.name(), $inputId)
        </dd>
      #end
    </dl>
  #else
    #displayReplicationConfiguration($reference)
  #end
#end

<form action="$xwiki.relativeRequestURL" method="post">
  <input type="hidden" name="form_token" value="$!{services.csrf.getToken()}" />

  #if ($replicationDocument.documentReference.name == 'WebHome')
    <fieldset>
      <legend>$escapetool.xml($services.localization.render('replication.admin.page.pageandchildren'))</legend>

      #replicationInstances('space', $instances, $replicationDocument.documentReference.parent)
    </fieldset>
  #end

  <fieldset>
    <legend>$escapetool.xml($services.localization.render('replication.admin.page.currentpage'))</legend>

    #replicationInstances('document', $instances, $replicationDocument.documentReference)
  </fieldset>

  #if (!$replicationDisabled && ($services.security.authorization.hasAccess('ADMIN', $replicationDocument.documentReference) || $services.security.authorization.hasAccess('ADMIN', $replicationDocument.documentReference.parent)))
    <button class="btn" id="replication_save" name="replication_save">$escapetool.xml($services.localization.render('replication.admin.page.button.save'))</button>
  #end
</form>